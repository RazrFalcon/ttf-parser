[package]
name = "ttf-parser"
version = "0.14.0"
authors = ["Yevhenii Reizner <razrfalcon@gmail.com>"]
keywords = ["ttf", "truetype", "opentype"]
categories = ["parser-implementations"]
license = "MIT OR Apache-2.0"
description = "A high-level, safe, zero-allocation TrueType font parser."
repository = "https://github.com/RazrFalcon/ttf-parser"
documentation = "https://docs.rs/ttf-parser/"
readme = "README.md"
edition = "2018"
exclude = ["benches/**"]

[features]
default = ["std", "opentype-layout", "opentype-math", "apple-layout", "variable-fonts", "glyph-names"]
std = []
# Enables variable fonts support. Increases binary size almost twice.
# Includes avar, CFF2, fvar, gvar, HVAR, MVAR and VVAR tables.
variable-fonts = []
# Enables GDEF, GPOS and GSUB tables.
opentype-layout = []
# Enables MATH tables.
opentype-math = []
# Enables feat, trak tables.
apple-layout = []
# Enables glyph name query via `Face::glyph_name`.
# TrueType fonts do not store default glyph names, to reduce file size,
# which means we have to store them in ttf-parser. And there are almost 500 of them.
# By disabling this feature a user can reduce binary size a bit.
glyph-names = []
# Enables heap allocations during gvar table parsing used by Apple's variable fonts.
# Due to the way gvar table is structured, we cannot avoid allocations.
# By default, only up to 32 variable tuples will be allocated on the stack,
# while the spec allows up to 4095. Most variable fonts use 10-20 tuples,
# so our limit is suitable for most of the cases. But if you need full support, you have to
# enable this feature.
gvar-alloc = ["std"]

[dev-dependencies]
base64 = "0.12"
pico-args = "0.3.1"
svgtypes = "0.5"
xmlwriter = "0.1"
